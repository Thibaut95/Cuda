#include "Indice2D.h"
#include "ReductionAddTools.h"

__global__ void sliceDevice(int n, float* ptrResultGM);

__global__ void sliceDevice(int n, float* ptrResultGM)
    {
    __shared__
    extern float tabSM[];

    reductionIntraThread(tabSM, n);

    __syncthreads();

    ReductionAddTools::reductionADD(tabSM, ptrResultGM);

    }

__device__ void reductionIntraThread(float* tabSM, int n)
    {
    const int TID = Indice2D::tid();
    int s = TID;
    const int NB_THREAD = Indice2D::nbThread();
    const int TID_LOCAL = Indice2D::tidLocal();

    float sum = 0.0;
    float xi;

    while (s < n)
	{
	xi = s / (float) n;
	sum += (1 / (float) n) * f(xi);
	s += NB_THREAD;
	}
    tabGM[TID] = sum;
    }
